{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Dto/NewParcelDto.ts","webpack:///./src/app/app-material.module.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/action-details/action-details.component.html","webpack:///./src/app/components/action-details/action-details.component.scss","webpack:///./src/app/components/action-details/action-details.component.ts","webpack:///./src/app/components/node-actions/node-actions.component.html","webpack:///./src/app/components/node-actions/node-actions.component.scss","webpack:///./src/app/components/node-actions/node-actions.component.ts","webpack:///./src/app/components/node-details/node-details.component.html","webpack:///./src/app/components/node-details/node-details.component.scss","webpack:///./src/app/components/node-details/node-details.component.ts","webpack:///./src/app/components/nodes/nodes.component.html","webpack:///./src/app/components/nodes/nodes.component.scss","webpack:///./src/app/components/nodes/nodes.component.ts","webpack:///./src/app/components/sorter/sorter.component.html","webpack:///./src/app/components/sorter/sorter.component.scss","webpack:///./src/app/components/sorter/sorter.component.ts","webpack:///./src/app/material/navigation/navigation.component.css","webpack:///./src/app/material/navigation/navigation.component.html","webpack:///./src/app/material/navigation/navigation.component.ts","webpack:///./src/app/services/global.service.ts","webpack:///./src/app/services/nodes.service.ts","webpack:///./src/app/services/parcels.service.ts","webpack:///./src/app/services/physics.service.ts","webpack:///./src/app/services/sorter.service.ts","webpack:///./src/app/services/tracking.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class NewParcelDto {\r\n    \r\n    public id: string;\r\n    public nodeId: string;    \r\n    public barcodeToRead: string;\r\n    public weightToWeigh: string;\r\n}","import { NgModule } from '@angular/core';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatBadgeModule,\r\n  MatBottomSheetModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatStepperModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatTreeModule,\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  exports:[    \r\n  MatAutocompleteModule,\r\n  MatBadgeModule,\r\n  MatBottomSheetModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatStepperModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatTreeModule,\r\n  ]\r\n})\r\nexport class AppMaterialModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NodesComponent } from './components/nodes/nodes.component';\r\nimport { SorterComponent } from './components/sorter/sorter.component';\r\nimport { NodeDetailsComponent } from './components/node-details/node-details.component';\r\nimport { NodeActionsComponent } from './components/node-actions/node-actions.component';\r\nimport { ActionDetailsComponent } from './components/action-details/action-details.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/sorter', pathMatch: 'full' },\r\n  { path: 'sorter', component: SorterComponent },\r\n  { path: 'nodes', component: NodesComponent },\r\n  { path: 'node-details/:id', component: NodeDetailsComponent },  \r\n  { path: 'node-actions/:id', component: NodeActionsComponent },\r\n  { path: 'action-details/:id', component: ActionDetailsComponent }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\r\\n  <app-navigation></app-navigation>\"","module.exports = \".is-inactive {\\n  opacity: 0.5; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvRDpcXFByb2plY3RzXFxFZHNTb3J0ZXJFbXVsYXRvclxcRWRzU29ydGVyRW11bGF0b3JHaXRcXGVkcy5zb3J0ZXJlbXVsYXRvclxcZWRzLnNvcnRlcmVtdWxhdG9yLmNsaWVudFxcV2ViQ2xpZW50L3NyY1xcYXBwXFxhcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRU07RUFDRSxZQUFZLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIgICAgXHJcbiAgIFxyXG4gICAgICAuaXMtaW5hY3RpdmUge1xyXG4gICAgICAgIG9wYWNpdHk6IDAuNTtcclxuICAgICAgfSJdfQ== */\"","import { Component } from '@angular/core';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Sorter Emulator Web Client';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, ViewChild, ElementRef  } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { NgxSvgModule } from 'ngx-svg';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppMaterialModule } from './app-material.module';\r\nimport { NavigationComponent } from './material/navigation/navigation.component';\r\nimport { NodesComponent } from './components/nodes/nodes.component';\r\nimport { SorterComponent } from './components/sorter/sorter.component';\r\nimport { NodeActionsComponent } from './components/node-actions/node-actions.component';\r\nimport { ActionDetailsComponent } from './components/action-details/action-details.component';\r\nimport { NodeDetailsComponent } from './components/node-details/node-details.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavigationComponent,\r\n    NodesComponent,\r\n    SorterComponent,\r\n    NodeActionsComponent,\r\n    ActionDetailsComponent,\r\n    NodeDetailsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    LayoutModule,\r\n    AppRoutingModule,    \r\n    AppMaterialModule,\r\n    NgxSvgModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<p>\\r\\n  action-details works!\\r\\n</p>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWN0aW9uLWRldGFpbHMvYWN0aW9uLWRldGFpbHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-action-details',\r\n  templateUrl: './action-details.component.html',\r\n  styleUrls: ['./action-details.component.scss']\r\n})\r\nexport class ActionDetailsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<p>\\r\\n  node-actions works!\\r\\n</p>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbm9kZS1hY3Rpb25zL25vZGUtYWN0aW9ucy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-node-actions',\r\n  templateUrl: './node-actions.component.html',\r\n  styleUrls: ['./node-actions.component.scss']\r\n})\r\nexport class NodeActionsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div *ngIf=\\\"node\\\">\\r\\n    <h2>{{node.name}} Details</h2>\\r\\n    <div><span>Id: </span>{{node.id}}</div>\\r\\n    <div>\\r\\n      <label>Name:\\r\\n        <input matInput [(ngModel)]=\\\"node.name\\\" placeholder=\\\"Name\\\" />\\r\\n      </label>\\r\\n    </div>\\r\\n    <div>\\r\\n      <label>HostDestinationId:\\r\\n        <input matInput type=\\\"number\\\" [(ngModel)]=\\\"node.hostDestinationId\\\" placeholder=\\\"HostDestinationId\\\" />\\r\\n      </label>\\r\\n    </div>\\r\\n    <div>\\r\\n      <label>Speed:\\r\\n        <input matInput type=\\\"number\\\" [(ngModel)]=\\\"node.speed\\\" placeholder=\\\"Speed\\\" />\\r\\n      </label>\\r\\n    </div>\\r\\n    <div>\\r\\n      <label>Size:\\r\\n        <input matInput type=\\\"number\\\" [(ngModel)]=\\\"node.size\\\" placeholder=\\\"Size\\\" />\\r\\n      </label>\\r\\n    </div>\\r\\n    <div>\\r\\n        <label>PositionX:\\r\\n          <input matInput type=\\\"number\\\" [(ngModel)]=\\\"node.positionX\\\" placeholder=\\\"PositionX\\\" />\\r\\n        </label>\\r\\n    </div>    \\r\\n    <div>\\r\\n        <label>PositionY:\\r\\n          <input matInput type=\\\"number\\\" [(ngModel)]=\\\"node.positionY\\\" placeholder=\\\"PositionY\\\" />\\r\\n        </label>\\r\\n    </div>\\r\\n    <div>\\r\\n        <label>Rotation:\\r\\n          <input matInput type=\\\"number\\\" [(ngModel)]=\\\"node.rotation\\\" placeholder=\\\"Rotation\\\" />\\r\\n        </label>\\r\\n    </div>\\r\\n    <div>\\r\\n        <label>Curvature:\\r\\n          <input matInput type=\\\"number\\\" [(ngModel)]=\\\"node.curvature\\\" placeholder=\\\"Curvature\\\" />\\r\\n        </label>\\r\\n    </div>\\r\\n    <div>\\r\\n      <label>DefaultNextId:\\r\\n          <select [(ngModel)]=\\\"node.defaultNextId\\\">\\r\\n              <option *ngFor=\\\"let node of nodes\\\" [ngValue]=\\\"node.id\\\">\\r\\n                {{ node.Name }}\\r\\n              </option>\\r\\n            </select>\\r\\n      </label>\\r\\n      <a routerLink=\\\"/node-details/{{node.defaultNextId}}\\\"><mat-icon>menu</mat-icon></a>\\r\\n    </div>\\r\\n    <div>\\r\\n      <label>DefaultNextOccurs:\\r\\n        <input matInput type=\\\"number\\\" [(ngModel)]=\\\"node.defaultNextOccurs\\\" placeholder=\\\"DefaultNextOccurs\\\" />\\r\\n      </label>\\r\\n    </div>\\r\\n    <div>\\r\\n      <label>DefaultNextContinues:\\r\\n        <input matInput type=\\\"number\\\" [(ngModel)]=\\\"node.defaultNextContinues\\\" placeholder=\\\"DefaultNextContinues\\\" />\\r\\n      </label>\\r\\n    </div>\\r\\n    <div><span>IsStopped: </span>{{node.isStopped}}</div>\\r\\n    <div>\\r\\n        <button class=\\\"badge-left button\\\" (click)=\\\"onSaveNode()\\\">Save</button>\\r\\n        <button class=\\\"badge-middle button is-stop\\\" (click)=\\\"onDeleteNode()\\\">Delete</button>\\r\\n        <button class=\\\"badge-right button\\\" (click)=\\\"onDuplicateNode()\\\">Duplicate</button>\\r\\n    </div>\\r\\n  </div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbm9kZS1kZXRhaWxzL25vZGUtZGV0YWlscy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NodesService } from 'src/app/services/nodes.service';\r\n\r\n@Component({\r\n  selector: 'app-node-details',\r\n  templateUrl: './node-details.component.html',\r\n  styleUrls: ['../../app.component.scss','./node-details.component.scss']\r\n})\r\nexport class NodeDetailsComponent implements OnInit {\r\n  nodeId: string;\r\n  nodes: any;\r\n  node: any;  \r\n  defaultNode: any;\r\n  constructor(\r\n    private nodesService:NodesService,\r\n    private route: ActivatedRoute,\r\n    private router: Router) {\r\n      route.params.subscribe(val => {        \r\n        \r\n        \r\n        this.nodeId = this.route.snapshot.paramMap.get('id');\r\n        console.log(\"Setting up nodeId \"+this.nodeId);\r\n        this.getAllNodes();\r\n      });\r\n     }\r\n \r\n  ngOnInit() {\r\n    \r\n    this.nodeId = this.route.snapshot.paramMap.get('id');\r\n    this.getAllNodes();\r\n  }\r\n  getAllNodes(): any {\r\n    this.nodesService.getNodes().subscribe((data:{}) => {\r\n      this.nodes = data;    \r\n      this.getNode();\r\n    });\r\n  }\r\n  \r\n  getNode(): void {\r\n    this.node=this.nodes.find(n=>n.id==this.nodeId);\r\n    this.defaultNode=this.nodes.find(n=>n.id==this.node.defaultNodeId);\r\n  }\r\n  onDuplicateNode():void{\r\n    this.node.id=null;\r\n    this.nodeId=null;\r\n  }\r\n  onSaveNode():void{\r\n    if(!this.node.id){\r\n      this.addNode();\r\n    }\r\n    else{\r\n      this.updateNode();\r\n    }\r\n  }\r\n  onDeleteNode():void{\r\n   this.deleteNode();\r\n  }\r\n  updateNode(): void {\r\n    console.log(this.node);\r\n    this.nodesService.updateNode(this.nodeId, this.node).subscribe((data) => {\r\n      \r\n      this.router.navigate(['/node-details/'+data.id]).then(nav => {\r\n        console.log(nav); // true if navigation is successful      \r\n        \r\n      }, err => {\r\n        console.log(err) // when there's an error\r\n      });\r\n    });\r\n  }\r\n  addNode(): void {\r\n    this.nodesService.addNode(this.node).subscribe((data) => {\r\n      this.router.navigate(['/node-details/'+data.id]).then(nav => {\r\n        console.log(nav); // true if navigation is successful \r\n      }, err => {\r\n        console.log(err) // when there's an error\r\n      });\r\n    });\r\n  }\r\n  deleteNode(): void {\r\n\r\n    this.nodesService.deleteNode(this.nodeId).subscribe((data) => {\r\n      this.router.navigate(['/nodes']).then(nav => {\r\n        console.log(nav); // true if navigation is successful        \r\n      }, err => {\r\n        console.log(err) // when there's an error\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"<div *ngIf=\\\"nodes.length>0\\\">\\r\\n    <mat-form-field>\\r\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n    </mat-form-field>\\r\\n  <table mat-table  [dataSource]=nodesData>\\r\\n      <ng-container matColumnDef=\\\"name\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n          <td mat-cell *matCellDef=\\\"let node\\\"> {{node.name}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"hostDestinationId\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Host Destination Id </th>\\r\\n          <td mat-cell *matCellDef=\\\"let node\\\"> {{node.hostDestinationId}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"speed\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Speed (mm/s) </th>\\r\\n          <td mat-cell *matCellDef=\\\"let node\\\">{{node.speed | number:'1.3'}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"size\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Size (mm) </th>\\r\\n          <td mat-cell *matCellDef=\\\"let node\\\"> {{node.size | number:'1.3'}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"positionX\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Position X (mm) </th>\\r\\n            <td mat-cell *matCellDef=\\\"let node\\\"> {{node.positionX | number:'1.3'}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"positionY\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Position Y (mm) </th>\\r\\n            <td mat-cell *matCellDef=\\\"let node\\\"> {{node.positionY | number:'1.3'}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"rotation\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Rotation (º) </th>\\r\\n            <td mat-cell *matCellDef=\\\"let node\\\"> {{node.rotation | number:'1.3'}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"curvature\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Curvature (º) </th>\\r\\n            <td mat-cell *matCellDef=\\\"let node\\\"> {{node.curvature | number:'1.3'}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"next\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Next </th>\\r\\n          <td mat-cell *matCellDef=\\\"let node\\\"> {{getNodeName(node.defaultNextId)}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"occurs\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Occurs (mm) </th>\\r\\n          <td mat-cell *matCellDef=\\\"let node\\\"> {{node.defaultNextOccurs | number:'1.3'}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"continues\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Continues (mm) </th>\\r\\n          <td mat-cell *matCellDef=\\\"let node\\\"> {{node.defaultNextContinues | number:'1.3'}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"details\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> </th>\\r\\n          <td mat-cell *matCellDef=\\\"let node\\\">\\r\\n              <a routerLink=\\\"/node-details/{{node.id}}\\\"  matTooltip=\\\"Details\\\"><mat-icon>description</mat-icon></a>        \\r\\n          </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"actions\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> </th>\\r\\n          <td mat-cell *matCellDef=\\\"let node\\\">\\r\\n              <a routerLink=\\\"/node-actions/{{node.id}}\\\"  matTooltip=\\\"Actions\\\"><mat-icon>open_in_new</mat-icon></a>\\r\\n          </td>\\r\\n      </ng-container>\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n\\r\\n\\r\\n  </table>\\r\\n</div>\\r\\n<div >\\r\\n  <span>\\r\\n    <h5> Updated:</h5>\\r\\n  </span>{{LastTracked| date :  \\\"HH:mm:ss\\\"}}\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbm9kZXMvbm9kZXMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport {MatTableDataSource} from '@angular/material';\r\nimport { NodesService } from '../../services/nodes.service';\r\n@Component({\r\n  selector: 'app-nodes',\r\n  templateUrl: './nodes.component.html',\r\n  styleUrls: ['../../app.component.scss','./nodes.component.scss'],\r\n})\r\nexport class NodesComponent implements OnInit {\r\n  \r\n  nodes:any = [];\r\n  nodesData:any = [];\r\n  displayedColumns: string[] = ['name', 'hostDestinationId', 'speed', 'size','positionX','positionY','rotation','curvature', 'next', 'occurs','continues','details', 'actions'];\r\n  constructor(private nodesService:NodesService) { }\r\n\r\n  ngOnInit() {    \r\n    this.nodesService.getNodes().subscribe((data:{}) => {\r\n      this.nodes=data;\r\n      this.nodesData = new MatTableDataSource(this.nodes);\r\n    });\r\n  }\r\n  \r\n  getNodeName(nodeId){\r\n    let node = this.nodes.filter(n => n.id==nodeId)[0];\r\n    if(node){\r\n      return node.name;\r\n    }\r\n  }\r\n  applyFilter(filterValue: string) {\r\n    this.nodesData.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","module.exports = \"<div *ngIf=\\\"physicsConfig\\\">\\r\\n  <button mat-button [ngClass]=\\\"{\\r\\n        'is-start':true,\\r\\n        'is-inactive': physicsConfig.timeLapseSpeed==0}\\\" ng-show (click)=\\\"startSorter(1)\\\"><mat-icon>play_arrow</mat-icon></button>\\r\\n  <button mat-button color=\\\"warn\\\" [ngClass]=\\\"{\\r\\n          'is-stop':true,\\r\\n          'is-inactive': physicsConfig.timeLapseSpeed>0}\\\" (click)=\\\"startSorter(0)\\\"><mat-icon>stop</mat-icon></button>\\r\\n\\r\\n  <button mat-button [ngClass]=\\\"{\\r\\n          'is-inactive': physicsConfig.timeLapseSpeed==0}\\\"\\r\\n    (click)=\\\"startSorter(physicsConfig.timeLapseSpeed*0.5)\\\"><mat-icon>fast_rewind</mat-icon></button>\\r\\n  <button mat-flat-button>{{physicsConfig.timeLapseSpeed}}x</button>\\r\\n  <button mat-button [ngClass]=\\\"{\\r\\n       'button':true,\\r\\n       'is-inactive': physicsConfig.timeLapseSpeed==0}\\\" ng-show\\r\\n    (click)=\\\"startSorter(physicsConfig.timeLapseSpeed*2)\\\"><mat-icon>fast_forward</mat-icon></button>\\r\\n\\r\\n</div>\\r\\n<div>\\r\\n  <input matInput [(ngModel)]=\\\"barcodeToRead\\\" placeholder=\\\"Barcode to read\\\" />\\r\\n  <input matInput [(ngModel)]=\\\"weightToWeigh\\\" placeholder=\\\"Weight to weigh\\\" />\\r\\n  <input matInput [(ngModel)]=\\\"sorterProportion\\\" placeholder=\\\"Sorter Proportion\\\" />\\r\\n  <input matInput [(ngModel)]=\\\"translateX\\\" placeholder=\\\"Translate X\\\" />\\r\\n  <input matInput [(ngModel)]=\\\"translateY\\\" placeholder=\\\"Translate Y\\\" />\\r\\n</div>\\r\\n<mat-card class=\\\"sorter-area-container\\\">\\r\\n <svg class=\\\"sorter-area\\\">\\r\\n    <path *ngFor=\\\"let path of nodePaths\\\" [attr.d]=\\\"path.path\\\" [attr.stroke-width]=\\\"path.width\\\"\\r\\n      [attr.stroke]=\\\"path.stroke\\\" (click)=\\\"onNodeSelect(path.node)\\\" fill=\\\"none\\\" stroke-opacity=\\\"0.8\\\">\\r\\n      <title>{{path.node.name}}</title>\\r\\n    </path>\\r\\n    <path *ngFor=\\\"let path of trackingPaths\\\" [attr.d]=\\\"path.path\\\" [attr.stroke-width]=\\\"path.width\\\"\\r\\n      [attr.stroke]=\\\"path.stroke\\\" (click)=\\\"onTrackingSelect(path.tracking)\\\" [attr.stroke-opacity]=\\\"path.tracking.present?'0.8':'0.4'\\\" >\\r\\n      <title>{{path.tracking.pic}}</title>\\r\\n    </path>\\r\\n  </svg>\\r\\n</mat-card>\\r\\n\\r\\n<div class=\\\"node-control-container\\\" *ngIf=\\\"nodeSelected\\\">\\r\\n  <mat-card>\\r\\n      <div>\\r\\n        <span>\\r\\n          Node {{nodeSelected.name}}\\r\\n        </span>\\r\\n          <a routerLink=\\\"/node-details/{{nodeSelected.id}}\\\"  matTooltip=\\\"Details\\\"><mat-icon>description</mat-icon></a>\\r\\n        \\r\\n        \\r\\n      </div>\\r\\n      <div>\\r\\n        <button mat-button (click)=\\\"onAddParcel(nodeSelected)\\\"><mat-icon>add</mat-icon></button>\\r\\n        <button mat-button [ngClass]=\\\"{\\r\\n                    'is-start':true,\\r\\n                    'is-inactive': nodeSelected.isStopped}\\\" ng-show (click)=\\\"onStart(nodeSelected)\\\"><mat-icon>play_arrow</mat-icon></button>\\r\\n        <button mat-button color=\\\"warn\\\" [ngClass]=\\\"{\\r\\n                      'is-stop':true,\\r\\n                      'is-inactive': !nodeSelected.isStopped}\\\" (click)=\\\"onStop(nodeSelected)\\\"><mat-icon>stop</mat-icon></button>\\r\\n      </div>\\r\\n  </mat-card>\\r\\n</div>\\r\\n<div class=\\\"tracking-control-container\\\"  *ngIf=\\\"nodeSelected\\\" >  \\r\\n    <mat-card *ngFor=\\\"let tracking of getTrackings(nodeSelected.id)\\\">\\r\\n      <div>\\r\\n        <div>\\r\\n          <span>Pic {{tracking.pic}}</span>\\r\\n        </div>\\r\\n        <div>\\r\\n          <span>Position {{tracking.currentPosition | number:'1.3'}}</span>\\r\\n        </div>\\r\\n        <div>\\r\\n          <button mat-button color=\\\"warn\\\" (click)=\\\"onRemoveTracking(tracking)\\\"><mat-icon>delete_forever</mat-icon></button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-card>\\r\\n</div>\\r\\n<div class=\\\"clear\\\"></div>\\r\\n<div>\\r\\n  <span>\\r\\n    <h5> Updated:</h5>\\r\\n  </span>{{lastTracked| date :  \\\"HH:mm:ss\\\"}}\\r\\n</div>\"","module.exports = \".sorter-area-container {\\n  overflow-y: scroll;\\n  overflow-x: scroll;\\n  float: left;\\n  width: 80%;\\n  height: 75%;\\n  margin: 2px; }\\n\\n.node-control-container {\\n  float: left;\\n  width: 15%;\\n  margin: 1px; }\\n\\n.tracking-control-container {\\n  float: left;\\n  width: 15%;\\n  margin: 1px; }\\n\\n.clear {\\n  clear: left; }\\n\\n.sorter-area {\\n  width: 500%;\\n  height: 500%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zb3J0ZXIvRDpcXFByb2plY3RzXFxFZHNTb3J0ZXJFbXVsYXRvclxcRWRzU29ydGVyRW11bGF0b3JHaXRcXGVkcy5zb3J0ZXJlbXVsYXRvclxcZWRzLnNvcnRlcmVtdWxhdG9yLmNsaWVudFxcV2ViQ2xpZW50L3NyY1xcYXBwXFxjb21wb25lbnRzXFxzb3J0ZXJcXHNvcnRlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFpQjtFQUNqQixrQkFBaUI7RUFDakIsV0FBVztFQUNYLFVBQVU7RUFDVixXQUFVO0VBQ1YsV0FBVyxFQUFBOztBQUdmO0VBQ0ksV0FBVTtFQUNWLFVBQVU7RUFDVixXQUFXLEVBQUE7O0FBRWY7RUFDSSxXQUFVO0VBQ1YsVUFBVTtFQUNWLFdBQVcsRUFBQTs7QUFFZjtFQUNJLFdBQVcsRUFBQTs7QUFFZjtFQUVJLFdBQVc7RUFDWCxZQUFXLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3NvcnRlci9zb3J0ZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc29ydGVyLWFyZWEtY29udGFpbmVye1xyXG4gICAgb3ZlcmZsb3cteTpzY3JvbGw7XHJcbiAgICBvdmVyZmxvdy14OnNjcm9sbDtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgd2lkdGg6IDgwJTsgXHJcbiAgICBoZWlnaHQ6NzUlO1xyXG4gICAgbWFyZ2luOiAycHg7XHJcblxyXG59XHJcbi5ub2RlLWNvbnRyb2wtY29udGFpbmVye1xyXG4gICAgZmxvYXQ6bGVmdDtcclxuICAgIHdpZHRoOiAxNSU7XHJcbiAgICBtYXJnaW46IDFweDtcclxufVxyXG4udHJhY2tpbmctY29udHJvbC1jb250YWluZXJ7XHJcbiAgICBmbG9hdDpsZWZ0O1xyXG4gICAgd2lkdGg6IDE1JTtcclxuICAgIG1hcmdpbjogMXB4O1xyXG59XHJcbi5jbGVhcntcclxuICAgIGNsZWFyOiBsZWZ0O1xyXG59XHJcbi5zb3J0ZXItYXJlYXtcclxuICAgIFxyXG4gICAgd2lkdGg6IDUwMCU7IFxyXG4gICAgaGVpZ2h0OjUwMCU7XHJcbn0iXX0= */\"","import { Component, OnInit} from '@angular/core';\r\nimport { interval } from 'rxjs';\r\nimport { Node } from '../../Model/Node';\r\nimport { NodesService } from '../../services/nodes.service';\r\nimport { ParcelsService } from '../../services/parcels.service';\r\nimport { PhysicsService } from '../../services/physics.service';\r\nimport { NewParcelDto } from '../../Dto/NewParcelDto';\r\nimport { TrackingService } from '../../services/tracking.service';\r\nimport { SorterService } from 'src/app/services/sorter.service';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatSnackBar} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-sorter',\r\n  templateUrl: './sorter.component.html',\r\n  styleUrls: ['../../app.component.scss', './sorter.component.scss']\r\n})\r\n\r\nexport class SorterComponent implements OnInit {\r\n  private ctx: CanvasRenderingContext2D;\r\n\r\n  nodePaths:any = [];\r\n  trackingPaths:any = [];\r\n  barcodeToRead;\r\n  weightToWeigh;\r\n  translateX:number = 0;\r\n  translateY:number = 0;\r\n  sorterProportion : number=0.0095;\r\n\r\n\r\n  refreshDrawingsInterval: any;\r\n  \r\n  parcels: any = [];\r\n  nodes: any = [];\r\n  trackings: any = [];\r\n  physicsConfig: any;\r\n \r\n  nodeSelected: any;\r\n  trackingSelected: any;\r\n\r\n  lastTracked;\r\n\r\n  constructor(\r\n    private sorterService: SorterService,\r\n    private trackingService: TrackingService,\r\n    private nodesService: NodesService, \r\n    private parcelsService: ParcelsService, \r\n    private physicsService: PhysicsService,\r\n    private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.subscriveEvents();\r\n    this.refreshDrawingsInterval = interval(1000/60);\r\n    this.refreshDrawingsInterval.subscribe(n => this.drawSorterArea());\r\n\r\n    this.loadPhysics();\r\n    this.loadTracking();\r\n    this.loadNodes();\r\n    this.loadParcels();\r\n  }\r\n\r\n  subscriveEvents() {\r\n    this.trackingService.updateTracking.subscribe((data)=>{\r\n      let currentTracking = this.trackings.find(t=>t.id==data.id);\r\n      if(!currentTracking){\r\n        this.trackings.push(data)\r\n        return;\r\n      };\r\n      currentTracking.currentNodeId = data.currentNodeId;\r\n      currentTracking.currentPosition = data.currentPosition;\r\n      currentTracking.destinationNodeId=data.destinationNodeId;\r\n      currentTracking.pic = data.pic;\r\n      currentTracking.present = data.present;\r\n\r\n    });\r\n    this.trackingService.deleteTracking.subscribe((data)=>{      \r\n      console.log(\"Informed Removed tracking \"+ data.id);\r\n      this.trackings = this.trackings.filter(t=>t.id!=data.id);\r\n    });\r\n\r\n    this.nodesService.updateNodes.subscribe((data)=>{\r\n      this.nodes = this.nodes.filter(n=>n.id!=data.id);\r\n      this.nodes.push(data);\r\n    });\r\n    this.nodesService.deleteNodes.subscribe((data)=>{\r\n      console.log(\"Informed Removed node \"+ data.id);\r\n      this.nodes = this.nodes.filter(n=>n.id!=data.id);\r\n    });\r\n\r\n  }\r\n  onAddParcel(node: Node): void {\r\n    var parcelDto = new NewParcelDto();\r\n    parcelDto.barcodeToRead = this.barcodeToRead;\r\n    parcelDto.weightToWeigh = this.weightToWeigh;\r\n    parcelDto.nodeId = node.id;\r\n    this.parcelsService.addParcel(parcelDto).subscribe(\r\n      (data: {}) => {\r\n        \r\n      });\r\n  }\r\n  onStop(node) {\r\n    node.isStopped = true;\r\n    this.sorterService.updateNode(node.id, node).subscribe(\r\n      (data: {}) => {\r\n      });\r\n  }\r\n  onStart(node) {\r\n    node.isStopped = false;\r\n    this.sorterService.updateNode(node.id, node).subscribe(\r\n      (data: {}) => {\r\n      });\r\n  }\r\n  startSorter(i) {\r\n    this.physicsConfig.timeLapseSpeed = i;\r\n    this.physicsService.addPhysic(this.physicsConfig).subscribe((data: {}) => {\r\n      this.physicsConfig = data;\r\n    });\r\n  }\r\n  loadNodes() {\r\n    this.lastTracked = new Date();\r\n    this.nodesService.getNodes().subscribe((data: {}) => {\r\n      this.nodes = data;            \r\n      this.drawSorterArea();   \r\n    });\r\n  }\r\n  loadTracking() {\r\n    this.lastTracked = new Date();\r\n    this.trackingService.getTracking().subscribe(\r\n      (data: {}) => {\r\n        this.trackings = data;\r\n      });\r\n\r\n  }\r\n  loadParcels() {\r\n    this.lastTracked = new Date();\r\n    this.parcelsService.getParcels().subscribe(\r\n      (data: {}) => {\r\n        this.parcels = data;\r\n      });\r\n  }\r\n  loadPhysics() {\r\n    this.physicsService.getPhysic(0).subscribe((data: {}) => {\r\n      this.physicsConfig = data;\r\n    });\r\n  }\r\n  \r\n  getNodeName(nodeId) {\r\n    let node = this.nodes.filter(n => n.id == nodeId)[0];\r\n    if (node) {\r\n      return node.name;\r\n    }\r\n  }\r\n  getNode(nodeId) {\r\n    let node = this.nodes.filter(n => n.id == nodeId)[0];\r\n    if (node) {\r\n      return node;\r\n    }\r\n  }\r\n  getTracking(trackingId) {\r\n    let tracking = this.trackings.filter(t => t.id == trackingId)[0];\r\n    if (tracking) {\r\n      return tracking;\r\n    }\r\n  }\r\n\r\n  getTrackings(nodeId) {\r\n    return this.trackings.filter(p => p.currentNodeId == nodeId).sort((a, b) => a.currentPosition < b.currentPosition ? -1 : a.currentPosition > b.currentPosition ? 1 : 0);\r\n  }\r\n  getParcel(pic) {\r\n    let parcel= this.parcels.filter(p => p.pic == pic)[0];\r\n    if (parcel) {\r\n      return parcel;\r\n    }\r\n  }\r\n  onRemoveTracking(tracking): void {\r\n    console.log(\"Removing tracking \"+ tracking.id);\r\n    this.parcelsService.deleteParcel(tracking.pic).subscribe(\r\n      (data: {}) => {\r\n        console.log(\"Removed tracking \"+ tracking.id);\r\n        this.trackingSelected=null;\r\n      });\r\n  }\r\n  \r\n  drawSorterArea() {    \r\n    this.trackingPaths = this.trackingPaths.filter(trackingPath => this.trackings.find(t=>t.id==trackingPath.tracking.id) );\r\n    this.nodePaths = this.nodePaths.filter(nodePath => this.nodes.find(n=>n.id==nodePath.node.id) );\r\n    this.nodes.forEach(node =>this.updateNodePath(node));\r\n  }\r\n\r\n  updateNodePath(node){\r\n    let isSelected=this.nodeSelected&&this.nodeSelected.id==node.id;\r\n    let isStopped = node.isStopped;\r\n    let posX = (node.positionX+this.translateX) * this.sorterProportion;\r\n    let posY = (node.positionY+this.translateY) * this.sorterProportion;\r\n    let size = node.size  * this.sorterProportion;      \r\n    let radRotation = node.rotation * Math.PI /180;\r\n    let radCurvature = node.curvature * Math.PI /180;\r\n    let stroke = isStopped?isSelected?'Red':'DarkRed':isSelected?'Lime':'Green';\r\n    let width = 1000 * this.sorterProportion;\r\n\r\n   \r\n\r\n    let path=\"M\"+posX+\" \"+posY+\" \";   \r\n    if(radCurvature==0){\r\n      let x1 = posX + Math.cos(radRotation)*size;\r\n      let y1 = posY + Math.sin(radRotation)*size;\r\n     path+=\"L\"+x1+\" \"+y1+\" \";\r\n     \r\n    }\r\n    else{\r\n      let sweep = radCurvature > 0 ? 0 : 1;\r\n      \r\n      let radius = size / radCurvature;\r\n      let chord = Math.sin(radCurvature/2)*2*radius;\r\n      let x1 = posX + Math.cos(radRotation)*chord;\r\n      let y1 = posY + Math.sin(radRotation)*chord;\r\n      \r\n      path+=\"A \"+radius+\" \"+radius+\" 0 0 \"+sweep+\" \"+x1+\" \"+y1+\" \";\r\n    }\r\n\r\n\r\n    let currentNodePath = this.nodePaths.find(np=> np.node.id == node.id)\r\n    if(currentNodePath){\r\n\r\n      currentNodePath.node=node;\r\n      currentNodePath.width=width;\r\n      currentNodePath.stroke=stroke;\r\n      currentNodePath.path=path;\r\n    }else{\r\n      this.nodePaths.push({node:node, width : width, stroke : stroke, path : path });\r\n    }    \r\n\r\n    let trackings = this.getTrackings(node.id);\r\n    if (trackings) {\r\n      trackings.forEach(tracking => {\r\n        let isSelected = this.trackingSelected && this.trackingSelected.id == tracking.id;\r\n        let stroke = isSelected ? 'Blue' : 'DarkBlue';\r\n        let width = 250 * this.sorterProportion;\r\n        let radius = 250 * this.sorterProportion;\r\n        let position = tracking.currentPosition * this.sorterProportion;\r\n        let ax = posX + (position * Math.cos(radRotation));\r\n        let ay = posY + (position * Math.sin(radRotation)) - radius;\r\n        let bx = posX + (position * Math.cos(radRotation));\r\n        let by = posY + (position * Math.sin(radRotation)) + radius;\r\n        let path = \"M\" + ax + \" \" + ay + \" \";\r\n        path += \"A \" + radius + \" \" + radius + \" 0 0 0 \" + bx + \" \" + by + \" \";\r\n        path += \"A \" + radius + \" \" + radius + \" 0 0 0 \" + ax + \" \" + ay + \" \";\r\n\r\n        let currentTrackingPath = this.trackingPaths.find(tp => tp.tracking.id == tracking.id)\r\n        if (currentTrackingPath) {\r\n          currentTrackingPath.node = node;\r\n          currentTrackingPath.width = width;\r\n          currentTrackingPath.stroke = stroke;\r\n          currentTrackingPath.path = path;\r\n        } else {\r\n          this.trackingPaths.push({ tracking: tracking, width: width, stroke: stroke, path: path });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  onNodeSelect(node){\r\n    this.snackBar.open(node.name,\"\",{duration:1000})\r\n    this.nodeSelected = node; \r\n  }\r\n  onTrackingSelect(tracking){\r\n    this.snackBar.open(tracking.pic,\"\",{duration:1000})\r\n    this.trackingSelected = tracking;\r\n  }\r\n}\r\n\r\n","module.exports = \".sidenav-container {\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n.sidenav {\\r\\n  width: 200px;\\r\\n}\\r\\n\\r\\n.sidenav {\\r\\n  background: inherit;\\r\\n}\\r\\n\\r\\n.mat-toolbar.mat-primary {\\r\\n  position: -webkit-sticky;\\r\\n  position: sticky;\\r\\n  top: 0;\\r\\n  z-index: 1;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWF0ZXJpYWwvbmF2aWdhdGlvbi9uYXZpZ2F0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSx3QkFBZ0I7RUFBaEIsZ0JBQWdCO0VBQ2hCLE1BQU07RUFDTixVQUFVO0FBQ1oiLCJmaWxlIjoic3JjL2FwcC9tYXRlcmlhbC9uYXZpZ2F0aW9uL25hdmlnYXRpb24uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zaWRlbmF2LWNvbnRhaW5lciB7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG4uc2lkZW5hdiB7XHJcbiAgd2lkdGg6IDIwMHB4O1xyXG59XHJcblxyXG4uc2lkZW5hdiB7XHJcbiAgYmFja2dyb3VuZDogaW5oZXJpdDtcclxufVxyXG5cclxuLm1hdC10b29sYmFyLm1hdC1wcmltYXJ5IHtcclxuICBwb3NpdGlvbjogc3RpY2t5O1xyXG4gIHRvcDogMDtcclxuICB6LWluZGV4OiAxO1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\r\\n  <mat-sidenav #drawer class=\\\"sidenav\\\" fixedInViewport=\\\"true\\\"\\r\\n      [attr.role]=\\\"'dialog'\\\"\\r\\n      [mode]=\\\"'over'\\\"\\r\\n      [opened]=\\\"false\\\">\\r\\n    <mat-toolbar color=\\\"primary\\\">Menu</mat-toolbar>\\r\\n    <mat-nav-list>\\r\\n      <a mat-list-item href=\\\"/sorter\\\" color=\\\"primary\\\">Sorter</a>\\r\\n      <a mat-list-item href=\\\"/nodes\\\" color=\\\"accent\\\">Nodes</a>\\r\\n      <a mat-list-item href=\\\"/parcels\\\" color=\\\"warn\\\">Parcels</a>\\r\\n    </mat-nav-list>\\r\\n  </mat-sidenav>\\r\\n  <mat-sidenav-content>\\r\\n    <mat-toolbar color=\\\"primary\\\">\\r\\n      <button\\r\\n        type=\\\"button\\\"\\r\\n        aria-label=\\\"Toggle sidenav\\\"\\r\\n        mat-icon-button\\r\\n        (click)=\\\"drawer.toggle()\\\">\\r\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\r\\n      </button>\\r\\n      <span>Sorter Emulator Web Client</span>\\r\\n    </mat-toolbar>\\r\\n    <router-outlet></router-outlet>\\r\\n  </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-navigation',\r\n  templateUrl: './navigation.component.html',\r\n  styleUrls: ['./navigation.component.css']\r\n})\r\nexport class NavigationComponent {\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches)\r\n    );\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver) {}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlobalService {\r\n  //endpoint=\"http://localhost:49494/api/\"\r\n  endpoint=window.location.origin + '/api/';\r\n  constructor() { }\r\n}\r\n","import { Injectable, EventEmitter  } from '@angular/core';\r\n\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, catchError, tap } from 'rxjs/operators';\r\nimport * as signalR from \"@aspnet/signalr\";\r\nimport { GlobalService } from './global.service';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type':  'application/json'\r\n  })\r\n};\r\n\r\n@Injectable({  providedIn: 'root'})\r\nexport class NodesService {\r\n  updateNodes = new EventEmitter<any>();\r\n  deleteNodes = new EventEmitter<any>();\r\n  private nodesHubConnection: signalR.HubConnection;\r\n  constructor(private http: HttpClient, private globalService:GlobalService) {  \r\n    this.buildConnection();\r\n    this.registerEvents();\r\n    this.startConnection();\r\n  }\r\n  public buildConnection = () => {\r\n    this.nodesHubConnection = new signalR.HubConnectionBuilder()\r\n                            .withUrl(this.globalService.endpoint+'NodesHub')\r\n                            .build();\r\n \r\n   \r\n  }\r\n\r\n  public startConnection =()=> {\r\n    this.nodesHubConnection\r\n    .start()\r\n    .then(() => console.log('Nodes Connection started'))\r\n    .catch(err => console.log('Error while starting Nodes connection: ' + err))\r\n  }\r\n\r\n  public registerEvents(){\r\n    this.nodesHubConnection.on('UpdateNode', (data) => {\r\n      this.updateNodes.emit(data);\r\n    });\r\n    this.nodesHubConnection.on('DeleteNode', (data) => {\r\n      this.deleteNodes.emit(data);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  getNodes(): Observable<any> {\r\n    return this.http.get(this.globalService.endpoint + 'nodes').pipe(\r\n      map(this.extractData));\r\n  }\r\n  \r\n  getNode(id): Observable<any> {\r\n    return this.http.get(this.globalService.endpoint + 'nodes/' + id).pipe(\r\n      map(this.extractData));\r\n  }\r\n  \r\n  addNode (node): Observable<any> {\r\n    return this.http.post<any>(this.globalService.endpoint + 'nodes', JSON.stringify(node), httpOptions).pipe(\r\n      tap((node) =>{ console.log('added node w/ id='+node.id)}),\r\n      catchError(this.handleError<any>('addNode'))\r\n    );\r\n  }\r\n  \r\n  updateNode (id, node): Observable<any> {\r\n    console.log('updating node id='+id)\r\n    return this.http.put(this.globalService.endpoint + 'nodes/' + id, JSON.stringify(node), httpOptions).pipe(\r\n      tap(_ => console.log('updated node id='+id)),\r\n      catchError(this.handleError<any>('updateNode'))\r\n    );\r\n  }\r\n  \r\n  deleteNode (id): Observable<any> {\r\n    return this.http.delete<any>(this.globalService.endpoint + 'nodes/' + id, httpOptions).pipe(\r\n      tap(_ => console.log('deleted node id='+id)),\r\n      catchError(this.handleError<any>('deleteNode'))\r\n    );\r\n  }\r\n  private handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n  \r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n  \r\n      // TODO: better job of transforming error for user consumption\r\n      console.log(`${operation} failed: ${error.message}`);\r\n  \r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  private extractData(res: Response) {\r\n    let body = res;\r\n    return body || { };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, catchError, tap } from 'rxjs/operators';\r\n\r\nimport { GlobalService } from './global.service';\r\n\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type':  'application/json'\r\n  })\r\n};\r\n\r\n@Injectable({  providedIn: 'root'})\r\nexport class ParcelsService {\r\n\r\n  constructor(private http: HttpClient, private globalService:GlobalService) { }\r\n\r\n\r\n  getParcels(): Observable<any> {\r\n    return this.http.get(this.globalService.endpoint + 'parcels').pipe(\r\n      map(this.extractData));\r\n  }\r\n  \r\n  getParcel(id): Observable<any> {\r\n    return this.http.get(this.globalService.endpoint + 'parcels/' + id).pipe(\r\n      map(this.extractData));\r\n  }\r\n  \r\n  addParcel (parcel): Observable<any> {\r\n    console.log(parcel);\r\n     return this.http.post<any>(this.globalService.endpoint + 'parcels',JSON.stringify(parcel) , httpOptions)\r\n    .pipe(      \r\n      tap(() => console.log('Parcel added')),\r\n      catchError(this.handleError<any>('addParcel'))\r\n    );\r\n  }\r\n  \r\n  updateParcel (id, parcel): Observable<any> {\r\n    return this.http.put(this.globalService.endpoint + 'parcels/' + id, JSON.stringify(parcel), httpOptions).pipe(\r\n      tap((parcel) => console.log('Parcel updated')),\r\n      catchError(this.handleError<any>('updateParcel'))\r\n    );\r\n  }\r\n  \r\n  \r\n  deleteParcel (id): Observable<any> {\r\n    return this.http.delete<any>(this.globalService.endpoint + 'parcels/' + id).pipe(\r\n      tap(_ => console.log('deleted parcel')),\r\n      catchError(this.handleError<any>('deleteParcel'))\r\n    );\r\n  }\r\n  private handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n  \r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n  \r\n      // TODO: better job of transforming error for user consumption\r\n      console.log(`${operation} failed: ${error.message}`);\r\n  \r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  private extractData(res: Response) {\r\n    let body = res;\r\n    return body || { };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, catchError, tap } from 'rxjs/operators';\r\n\r\nimport { GlobalService } from './global.service';\r\n\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type':  'application/json'\r\n  })\r\n};\r\n\r\n@Injectable({  providedIn: 'root'})\r\nexport class PhysicsService {\r\n\r\n  \r\n  constructor(private http: HttpClient, private globalService:GlobalService) { }\r\n\r\n  getPhysics(): Observable<any> {\r\n    return this.http.get(this.globalService.endpoint + 'physics').pipe(\r\n      map(this.extractData));\r\n  }\r\n  \r\n  getPhysic(id): Observable<any> {\r\n    return this.http.get(this.globalService.endpoint + 'physics/' + id,httpOptions).pipe(\r\n      map(this.extractData));\r\n  }\r\n  \r\n  addPhysic (physic): Observable<any> {\r\n    console.log(physic);\r\n     return this.http.post<any>(this.globalService.endpoint + 'physics',JSON.stringify(physic) , httpOptions)\r\n    .pipe(      \r\n      tap(() => console.log('Physic added')),\r\n      catchError(this.handleError<any>('addPhysic'))\r\n    );\r\n  }\r\n  \r\n  updatePhysic (id, physic): Observable<any> {\r\n    return this.http.put(this.globalService.endpoint + 'physics/' + id, JSON.stringify(physic), httpOptions).pipe(\r\n      tap((physic) => console.log('Physic updated')),\r\n      catchError(this.handleError<any>('updatePhysic'))\r\n    );\r\n  }\r\n  \r\n  \r\n  deletePhysic (id): Observable<any> {\r\n    return this.http.delete<any>(this.globalService.endpoint + 'physics/' + id, httpOptions).pipe(\r\n      tap(_ => console.log(`deleted physic id=${id}`)),\r\n      catchError(this.handleError<any>('deletePhysic'))\r\n    );\r\n  }\r\n  private handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n  \r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n  \r\n      // TODO: better job of transforming error for user consumption\r\n      console.log(`${operation} failed: ${error.message}`);\r\n  \r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  private extractData(res: Response) {\r\n    let body = res;\r\n    return body || { };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, catchError, tap } from 'rxjs/operators';\r\n\r\nimport { GlobalService } from './global.service';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type':  'application/json'\r\n  })\r\n};\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SorterService {\r\n\r\n  constructor(private http: HttpClient, private globalService:GlobalService) { }\r\n  \r\n  updateNode (id, node): Observable<any> {\r\n    return this.http.put(this.globalService.endpoint + 'sorter/' + id, JSON.stringify(node), httpOptions).pipe(\r\n      tap(_ => console.log(`updated node id=${id}`)),\r\n      catchError(this.handleError<any>('updateNode'))\r\n    );\r\n  }\r\n  \r\n  private handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n  \r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n  \r\n      // TODO: better job of transforming error for user consumption\r\n      console.log(`${operation} failed: ${error.message}`);\r\n  \r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  private extractData(res: Response) {\r\n    let body = res;\r\n    return body || { };\r\n  }\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\n\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, catchError, tap } from 'rxjs/operators';\r\nimport * as signalR from \"@aspnet/signalr\";\r\nimport { GlobalService } from './global.service';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type':  'application/json'\r\n  })\r\n};\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TrackingService {\r\n  private trackingHubConnection: signalR.HubConnection;\r\n  updateTracking = new EventEmitter<any>();\r\n  deleteTracking = new EventEmitter<any>();  \r\n\r\n  constructor(private http: HttpClient, private globalService:GlobalService) { \r\n    this.buildConnection();\r\n    this.registerEvents();\r\n    this.startConnection();\r\n  }\r\n\r\n  public buildConnection = () => {\r\n    this.trackingHubConnection = new signalR.HubConnectionBuilder()\r\n                            .withUrl(this.globalService.endpoint+'TrackingHub')\r\n                            .build();\r\n \r\n   \r\n  }\r\n\r\n  public startConnection =()=> {\r\n    this.trackingHubConnection\r\n    .start()\r\n    .then(() => console.log('Tracking Connection started'))\r\n    .catch(err => console.log('Error while starting Tracking connection: ' + err))\r\n  }\r\n\r\n  public registerEvents(){\r\n    this.trackingHubConnection.on('UpdateTracking', (data) => {\r\n      this.updateTracking.emit(data);\r\n    });\r\n    this.trackingHubConnection.on('DeleteTracking', (data) => {\r\n      this.deleteTracking.emit(data);\r\n    });\r\n  }\r\n\r\n  getTracking(): Observable<any> {\r\n    return this.http.get(this.globalService.endpoint + 'tracking').pipe(\r\n      map(this.extractData));\r\n  }\r\n\r\n  deleteTrackingByPic(id): any {\r\n    return this.http.delete<any>(this.globalService.endpoint + 'tracking/' + id, httpOptions).pipe(\r\n      tap(_ => console.log('deleted tracking by pic=${id}')),\r\n      catchError(this.handleError<any>('deleteTrackingByPic'))\r\n    );\r\n  }\r\n  private handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n  \r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n  \r\n      // TODO: better job of transforming error for user consumption\r\n      console.log(`${operation} failed: ${error.message}`);\r\n  \r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  private extractData(res: Response) {\r\n    let body = res;\r\n    return body || { };\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}